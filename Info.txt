->Representación estado
Máximo 2 peticiones por viaje cisterna

Implementación: Creamos clase "viajes", la clase viajes tiene un CD y un vector de max 2 peticiones
                El estado general será un conjunto (lista/vector) de instancias de la clase viaje
Ej.Viajes:
    CD1 P1 P2  //Viaje1: CD1 atiende Pet1 y Pet2
    CD1 P6 P8  //Viaje2: Otra vez CD1, ahora Pet6 y Pet8
    CD2 P3
    CD3 P5 P6 

Lista pet: P4, P7... Peticiones no asignadas
________________________________________________________________________________________________________________________________

->Estado Inicial
  Viajes vacíos o con gasolineras aleatorias?
________________________________________________________________________________________________________________________________

->Operadores
  .Add petition(CDX, PX)
  
  .Remove petition(CDX, PX)
  
  .Swap CD(CDX, CDY, PX, PY): 
  e.g:
     CD1 P1 P2
     CD1 P6 P8
  .SwapInside(CD1, CD1, P2, P8):
     CD1 P1 P8
     CD1 P6 P2
________________________________________________________________________________________________________________________________

->Heurística

Queremos maximizar beneficio, minimizar perdidas, minimizar distancia:

1) beneficio(max) = Σ de todas las peticiones atendidas)
          --> si dias pendientes = 0 --> beneficio = 1020€ (un tanque = 1000€ y si atiendes petición el mismo día cuesta 102%)
          --> si dias pendientes > 0 --> beneficio = 1000 - 10(2^dias)
                   
2) Perdidas(min) = Σ del coste de todas las peticiones NO atendidas, es decir, la diferencia entre el beneficio que tendriamos hoy y si lo atendemos un dia más tarde
          --> Σ (beneficios(dia) - beneficios(dia + 1))
          
    ----->>>>>//esto no hay que tenerlo en cuenta para el experimento, solo beneficios - coste quilometros


3)Distancia recorrida(min) = Σ de todos los quilometros recorridos por los camiones X2 (1km cuesta 2€)
          --> Σ distancia recorrida X2

HEURISTICO(min) = perdidas + distancia recorrida - beneficios
________________________________________________________________________________________________________________________________
